{"version":3,"sources":["Components/Form/Form.jsx","redux/actions/formLogin.js","Components/Profile/Profile.jsx","App.js","redux/redusers/formEntry.js","redux/store.js","index.js"],"names":["Form","dispatch","useDispatch","login","useSelector","state","formEntry","loginEntry","password","passwordEntry","isLogin","useState","buttonClicked","setButtonClicked","to","className","onSubmit","e","preventDefault","type","name","placeholder","onChange","payload","setLogin","target","value","setPassword","disabled","Profile","App","exact","path","component","initialState","action","store","createStore","combineReducers","ReactDOM","render","document","getElementById"],"mappings":"+NAiDeA,EA1CF,WACT,IAAMC,EAAWC,cACXC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUC,cAC7CC,EAAWJ,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUG,iBAChDC,EAAUN,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUI,WACrD,EAA0CC,oBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KAeA,OAAID,EACO,cAAC,IAAD,CAAUE,GAAG,aAGpB,uBAAMC,UAAU,OAAOC,SATN,SAACC,GAClBA,EAAEC,iBACFL,GAAiB,IAOjB,UACI,uBAAOM,KAAK,OACRC,KAAK,QACLC,YAAY,iCACZC,SArBU,SAACL,GACnBhB,ECfgB,SAACE,GAAD,MAAY,CAChCgB,KAAM,YACNI,QAASpB,GDaIqB,CAASP,EAAEQ,OAAOC,SAqBnBA,MAAOvB,IAEX,uBAAOgB,KAAK,WACRC,KAAK,WACLC,YAAY,uCACZC,SAvBa,SAACL,GACtBhB,ECfmB,SAACO,GAAD,MAAe,CACtCW,KAAM,eACNI,QAASf,GDaImB,CAAYV,EAAEQ,OAAOC,SAuBtBA,MAAOlB,IAEX,wBAAQW,KAAK,SAASS,UAAWlB,EAAjC,0CEhCGmB,EAVC,WACZ,IAAM1B,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUH,SAEnD,OACI,qBAAKY,UAAU,UAAf,SACI,kEAAYZ,QCST2B,EAXH,WACV,OACE,qBAAKf,UAAU,UAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,IAAIC,UAAWjC,IACjC,cAAC,IAAD,CAAOgC,KAAK,WAAWC,UAAWJ,U,gBCVpCK,EAAe,CACjB/B,MAAO,cACPK,SAAU,SACVD,WAAY,GACZE,cAAe,GACfC,SAAS,GAsBEJ,EAnBG,WAAmC,IAAlCD,EAAiC,uDAAzB6B,EAAcC,EAAW,uCAChD,OAAQA,EAAOhB,MACX,IAAK,YACD,OAAO,2BACAd,GADP,IAEIE,WAAY4B,EAAOZ,QACnBb,QAAUL,EAAMF,QAAUgC,EAAOZ,SAAWlB,EAAMG,WAAaH,EAAMI,gBAE7E,IAAK,eACD,OAAO,2BACAJ,GADP,IAEII,cAAe0B,EAAOZ,QACtBb,QAAUL,EAAMF,QAAUE,EAAME,YAAcF,EAAMG,WAAa2B,EAAOZ,UAEhF,QACI,OAAOlB,IChBJ+B,EAJDC,YAAYC,YAAgB,CACtChC,eCGJiC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,W","file":"static/js/main.1d55e5f2.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\nimport { setLogin, setPassword } from './../../redux/actions/formLogin';\r\n\r\nimport './Form.css'\r\n\r\nconst Form = () => {\r\n    const dispatch = useDispatch()\r\n    const login = useSelector(state => state.formEntry.loginEntry)\r\n    const password = useSelector(state => state.formEntry.passwordEntry)\r\n    const isLogin = useSelector(state => state.formEntry.isLogin)\r\n    const [buttonClicked, setButtonClicked] = useState(false)\r\n\r\n    const onChangeLogin = (e) => {\r\n        dispatch(setLogin(e.target.value))\r\n    }\r\n\r\n    const onChangePassword = (e) => {\r\n        dispatch(setPassword(e.target.value))\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setButtonClicked(true)\r\n    }\r\n\r\n    if (buttonClicked) {\r\n        return <Redirect to='/profile' />\r\n    }\r\n    return (\r\n        <form className='form' onSubmit={handleSubmit}>\r\n            <input type=\"text\"\r\n                name=\"login\"\r\n                placeholder='Логин'\r\n                onChange={onChangeLogin}\r\n                value={login} />\r\n\r\n            <input type=\"password\"\r\n                name=\"password\"\r\n                placeholder='Пароль'\r\n                onChange={onChangePassword}\r\n                value={password} />\r\n\r\n            <button type='submit' disabled={!isLogin}>Вход</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;\r\n","export const setLogin = (login) => ({\r\n    type: 'SET_LOGIN',\r\n    payload: login\r\n})\r\nexport const setPassword = (password) => ({\r\n    type: 'SET_PASSWORD',\r\n    payload: password\r\n})","import { useSelector } from \"react-redux\";\r\n\r\nconst Profile = () => {\r\n    const login = useSelector(state => state.formEntry.login)\r\n\r\n    return (\r\n        <div className='profile'>\r\n            <h1>Логин: {login}</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","import { Route, Switch } from 'react-router';\nimport './App.css';\nimport Form from './Components/Form/Form';\nimport Profile from './Components/Profile/Profile';\n\nconst App = () => {\n  return (\n    <div className='wrapper'>\n      <Switch>\n        <Route exact path=\"/\" component={Form} />\n        <Route path=\"/profile\" component={Profile} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n    login: 'developer21',\r\n    password: '123456',\r\n    loginEntry: '',\r\n    passwordEntry: '',\r\n    isLogin: false\r\n}\r\n\r\nconst formEntry = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_LOGIN':\r\n            return {\r\n                ...state,\r\n                loginEntry: action.payload,\r\n                isLogin: (state.login === action.payload && state.password === state.passwordEntry) ? true : false\r\n            }\r\n        case 'SET_PASSWORD':\r\n            return {\r\n                ...state,\r\n                passwordEntry: action.payload,\r\n                isLogin: (state.login === state.loginEntry && state.password === action.payload) ? true : false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default formEntry","import { combineReducers,  createStore } from \"redux\";\r\nimport formEntry from './redusers/formEntry';\r\n\r\nconst store = createStore(combineReducers({\r\n    formEntry\r\n}))\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}